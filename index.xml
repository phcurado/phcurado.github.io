<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>phcurado</title><link>https://phcurado.github.io/</link><description>Recent content on phcurado</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Jan 2023 17:53:41 +0200</lastBuildDate><atom:link href="https://phcurado.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Parameter for dealing with API request and responses</title><link>https://phcurado.github.io/posts/using-parameter-for-dealing-with-api-request-and-responses/</link><pubDate>Sat, 21 Jan 2023 17:53:41 +0200</pubDate><guid>https://phcurado.github.io/posts/using-parameter-for-dealing-with-api-request-and-responses/</guid><description>This is a continuation from the previous article Serializing and Deserializing external data in Elixir.
As previously shown, it&amp;rsquo;s verbose and not always ideal using Ecto Embedded Schemas for loading and validating external parameters. I recently created a library that help solving the problems described on the previous article. Let&amp;rsquo;s reimplement the API schemas using Parameter and see what benefits it will bring.
Modeling the data from an API Considering the below example on how an API endpoint documentation may look like:</description></item><item><title>Serializing and Deserializing external data in Elixir</title><link>https://phcurado.github.io/posts/serializing-and-deserializing-external-data-in-elixir/</link><pubDate>Fri, 20 Jan 2023 10:11:21 +0200</pubDate><guid>https://phcurado.github.io/posts/serializing-and-deserializing-external-data-in-elixir/</guid><description>Since I started using Elixir I always felt that the ecosystem was missing a good library for serializing and deserializing external data. We already have some libraries in this area but it always feels that the existing ones are missing some features. For instance, when serializing external parameters a good library should have the following features:
Schema definition to shape your data. Type definition to convert the external data field to internal types.</description></item></channel></rss>